---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: api
  name: api
spec:
  type: NodePort
  ports:
    - name: "7860"
      port: 7860
      targetPort: 7860
      nodePort: 30760
  selector:
    io.kompose.service: api

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  type: NodePort
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
      nodePort: 32000
  selector:
    io.kompose.service: grafana

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: locust
  name: locust
spec:
  type: NodePort
  ports:
    - name: "8089"
      port: 8089
      targetPort: 8089
      nodePort: 32089
  selector:
    io.kompose.service: locust

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: mlflow
  name: mlflow
spec:
  type: NodePort
  ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
      nodePort: 31500
  selector:
    io.kompose.service: mlflow

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: prefect
  name: prefect
spec:
  type: NodePort
  ports:
    - name: "4200"
      port: 4200
      targetPort: 4200
      nodePort: 31200
  selector:
    io.kompose.service: prefect

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  type: NodePort
  ports:
    - name: "9090"
      port: 9090
      targetPort: 9090
      nodePort: 30900
  selector:
    io.kompose.service: prometheus

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: api
    spec:
      containers:
        - env:
            - name: PREFECT_API_URL
              value: http://prefect:4200/api
            - name: PREFECT_SERVER_API_URL
              value: http://prefect:4200/api
          envFrom:
            - configMapRef:
                name: env
          image: ghcr.io/faizan/a-to-z-mlops:main
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://api:7860/info
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 30
            timeoutSeconds: 10
          name: api
          ports:
            - containerPort: 7860
              protocol: TCP
          volumeMounts:
            - mountPath: /mlflow
              name: mlflow-data
      restartPolicy: Always
      volumes:
        - name: mlflow-data
          persistentVolumeClaim:
            claimName: mlflow-data

---
apiVersion: v1
data:
  API_KEY: abidali1234
  API_PORT: "7860"
  CACHE_TTL: "3600"
  GF_SECURITY_ADMIN_PASSWORD: admin
  GF_SECURITY_ADMIN_USER: admin
  GF_USERS_ALLOW_SIGN_UP: "false"
  GRAFANA_PORT: "3000"
  KAGGLE_API_KEY: 67552be506ca5d689239b4f8012ca1b6
  KAGGLE_USERNAME: faizan
  LOCUST_MODE: standalone
  LOCUST_PORT: "8089"
  LOCUST_SPAWN_RATE: "10"
  LOCUST_USERS: "100"
  MLFLOW_PORT: "5000"
  MLFLOW_TRACKING_URI: http://localhost:5000
  MODEL_NAME: news_classifier_logistic
  MODEL_VERSION: "1"
  PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:prefect_password@prefect-db:5432/prefect
  PREFECT_PORT: "4200"
  PREFECT_SERVER_API_HOST: 0.0.0.0
  PREFECT_SERVER_API_PORT: "4200"
  PROMETHEUS_PORT: "9090"
  RUN_PIPELINE: "true"
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: api-env
  name: env

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mlflow-data
  name: mlflow-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: env
          image: grafana/grafana:latest
          name: grafana
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            - name: dashboard-json
              mountPath: /etc/grafana/provisioning/dashboards/dashboard.json
              subPath: dashboard.json
            - name: dashboard-yml
              mountPath: /etc/grafana/provisioning/dashboards/dashboard.yml
              subPath: dashboard.yml
            - name: dashboard-provider
              mountPath: /etc/grafana/provisioning/dashboards/dashboard-provider.yml
              subPath: dashboard-provider.yml
            - name: datasource
              mountPath: /etc/grafana/provisioning/datasources/datasource.yml
              subPath: datasource.yml
      restartPolicy: Always
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
        - configMap:
            name: grafana-cm1
          name: grafana-cm1
        - configMap:
            items:
              - key: dashboard.json
                path: dashboard.json
            name: grafana-cm2
          name: grafana-cm2
        - configMap:
            items:
              - key: dashboard.yml
                path: dashboard.yml
            name: grafana-cm3
          name: grafana-cm3
        - configMap:
            items:
              - key: dashboard-provider.yml
                path: dashboard-provider.yml
            name: grafana-cm4
          name: grafana-cm4
        - configMap:
            items:
              - key: datasource.yml
                path: datasource.yml
            name: grafana-cm5
          name: grafana-cm5
        - name: dashboard-json
          configMap:
            name: dashboard-json-cm
        - name: dashboard-yml
          configMap:
            name: dashboard-yml-cm
        - name: dashboard-provider
          configMap:
            name: dashboard-provider-cm
        - name: datasource
          configMap:
            name: datasource-cm

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: grafana-data
  name: grafana-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
data:
  dashboard-provider.yml: "apiVersion: 1\n\nproviders:\n  - name: 'Default'\n    orgId: 1\n    folder: ''\n    type: file\n    disableDeletion: false\n    editable: true\n    options:\n      path: /etc/grafana/provisioning/dashboards "
  dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 25,
      "links": [],
      "panels": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "rate(http_requests_total{endpoint=~\"/predict|/info\"}[5m])",
              "legendFormat": "{{endpoint}} - {{method}}",
              "refId": "A"
            }
          ],
          "title": "API Requests by Endpoint",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 2,
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": true,
            "showThresholdMarkers": true,
            "sizing": "auto"
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "sum(prediction_cache_hits_total) by (category) + sum(prediction_cache_misses_total) by (category)",
              "legendFormat": "{{category}}",
              "refId": "A"
            }
          ],
          "title": "Category Distribution",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "max": 100,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  },
                  {
                    "color": "yellow",
                    "value": 50
                  },
                  {
                    "color": "green",
                    "value": 80
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "id": 3,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "sum(rate(news_prediction_confidence_sum[5m])) by (category) / sum(rate(news_prediction_confidence_count[5m])) by (category) * 100",
              "legendFormat": "{{category}}",
              "refId": "A"
            }
          ],
          "title": "Prediction Confidence Distribution",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "red"
                  },
                  {
                    "color": "yellow",
                    "value": 50
                  },
                  {
                    "color": "green",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "id": 4,
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": true,
            "showThresholdMarkers": true,
            "sizing": "auto"
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "sum(rate(prediction_cache_hits_total[5m])) / (sum(rate(prediction_cache_hits_total[5m])) + sum(rate(prediction_cache_misses_total[5m])))",
              "legendFormat": "Cache Hit Rate",
              "refId": "A"
            }
          ],
          "title": "Cache Hit Rate",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 16
          },
          "id": 5,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "news_prediction_rate",
              "legendFormat": "{{category}}",
              "refId": "A"
            }
          ],
          "title": "Prediction Rate by Category",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 16
          },
          "id": 6,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "rate(http_request_duration_seconds_sum[5m]) / rate(http_request_duration_seconds_count[5m])",
              "legendFormat": "{{endpoint}} - {{method}}",
              "refId": "A"
            }
          ],
          "title": "Request Latency",
          "type": "timeseries"
        }
      ],
      "preload": false,
      "refresh": "5s",
      "schemaVersion": 41,
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "News Classifier API Dashboard",
      "uid": "1e1245f3-f11e-4c85-9a1a-5043aab570c5",
      "version": 2
    }
  dashboard.yml: "apiVersion: 1\n\nproviders:\n  - name: 'News Classifier Dashboard'\n    orgId: 1\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10\n    allowUiUpdates: true\n    options:\n      path: /etc/grafana/provisioning/dashboards\n      foldersFromFilesStructure: true "
  datasource.yml: |-
    apiVersion: 1

    datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus:9090/
        basicAuth: false
        isDefault: true
        editable: true
        version: 1
        jsonData:
          timeInterval: 15s
          queryTimeout: 30s
          httpMethod: POST
        secureJsonData: {}
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: grafana
  name: grafana-cm1

---
apiVersion: v1
data:
  dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 25,
      "links": [],
      "panels": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "rate(http_requests_total{endpoint=~\"/predict|/info\"}[5m])",
              "legendFormat": "{{endpoint}} - {{method}}",
              "refId": "A"
            }
          ],
          "title": "API Requests by Endpoint",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 2,
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": true,
            "showThresholdMarkers": true,
            "sizing": "auto"
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "sum(prediction_cache_hits_total) by (category) + sum(prediction_cache_misses_total) by (category)",
              "legendFormat": "{{category}}",
              "refId": "A"
            }
          ],
          "title": "Category Distribution",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "max": 100,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  },
                  {
                    "color": "yellow",
                    "value": 50
                  },
                  {
                    "color": "green",
                    "value": 80
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "id": 3,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "sum(rate(news_prediction_confidence_sum[5m])) by (category) / sum(rate(news_prediction_confidence_count[5m])) by (category) * 100",
              "legendFormat": "{{category}}",
              "refId": "A"
            }
          ],
          "title": "Prediction Confidence Distribution",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "red"
                  },
                  {
                    "color": "yellow",
                    "value": 50
                  },
                  {
                    "color": "green",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "id": 4,
          "options": {
            "minVizHeight": 75,
            "minVizWidth": 75,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": true,
            "showThresholdMarkers": true,
            "sizing": "auto"
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "sum(rate(prediction_cache_hits_total[5m])) / (sum(rate(prediction_cache_hits_total[5m])) + sum(rate(prediction_cache_misses_total[5m])))",
              "legendFormat": "Cache Hit Rate",
              "refId": "A"
            }
          ],
          "title": "Cache Hit Rate",
          "type": "gauge"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 16
          },
          "id": 5,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "news_prediction_rate",
              "legendFormat": "{{category}}",
              "refId": "A"
            }
          ],
          "title": "Prediction Rate by Category",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 16
          },
          "id": 6,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "hideZeros": false,
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "12.0.1",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "dems359zmtb7kd"
              },
              "expr": "rate(http_request_duration_seconds_sum[5m]) / rate(http_request_duration_seconds_count[5m])",
              "legendFormat": "{{endpoint}} - {{method}}",
              "refId": "A"
            }
          ],
          "title": "Request Latency",
          "type": "timeseries"
        }
      ],
      "preload": false,
      "refresh": "5s",
      "schemaVersion": 41,
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "News Classifier API Dashboard",
      "uid": "1e1245f3-f11e-4c85-9a1a-5043aab570c5",
      "version": 2
    }
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: grafana
  name: grafana-cm2

---
apiVersion: v1
data:
  dashboard.yml: "apiVersion: 1\n\nproviders:\n  - name: 'News Classifier Dashboard'\n    orgId: 1\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10\n    allowUiUpdates: true\n    options:\n      path: /etc/grafana/provisioning/dashboards\n      foldersFromFilesStructure: true "
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: grafana
  name: grafana-cm3

---
apiVersion: v1
data:
  dashboard-provider.yml: "apiVersion: 1\n\nproviders:\n  - name: 'Default'\n    orgId: 1\n    folder: ''\n    type: file\n    disableDeletion: false\n    editable: true\n    options:\n      path: /etc/grafana/provisioning/dashboards "
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: grafana
  name: grafana-cm4

---
apiVersion: v1
data:
  datasource.yml: |-
    apiVersion: 1

    datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus:9090/
        basicAuth: false
        isDefault: true
        editable: true
        version: 1
        jsonData:
          timeInterval: 15s
          queryTimeout: 30s
          httpMethod: POST
        secureJsonData: {}
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: grafana
  name: grafana-cm5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: locust
  name: locust
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: locust
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: locust
    spec:
      containers:
        - args:
            - |
              pip install python-dotenv
              exec locust -f /home/locust/locustfile.py --host=http://api:7860
          command:
            - /bin/bash
            - -c
          env:
            - name: TARGET_HOST
              value: http://api:7860
          envFrom:
            - configMapRef:
                name: env
          image: locustio/locust:latest
          name: locust
          ports:
            - containerPort: 8089
              protocol: TCP
          volumeMounts:
            - mountPath: /home/locust/locustfile.py
              name: locust-cm0
              readOnly: true
              subPath: locustfile.py
            - mountPath: /home/locust/.env
              name: locust-cm1
              readOnly: true
              subPath: .env
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: stress_test.py
                path: locustfile.py
            name: locust-cm0
          name: locust-cm0
        - configMap:
            items:
              - key: .env
                path: .env
            name: locust-cm1
          name: locust-cm1

---
apiVersion: v1
data:
  stress_test.py: |
    import os
    import random

    from dotenv import load_dotenv
    from locust import HttpUser, between, task

    load_dotenv()

    API_KEY = os.getenv("API_KEY")


    class NewsClassifierUser(HttpUser):
        # Wait between 1 and 3 seconds between tasks
        wait_time = between(1, 3)

        # Sample news titles for testing
        sample_titles = [
            "Breaking: Major Tech Company Announces Revolutionary AI Breakthrough",
            "Sports: Local Team Wins Championship After Dramatic Final",
            "Politics: New Bill Passes Senate with Bipartisan Support",
            "Business: Stock Market Reaches New All-Time High",
            "Technology: New Smartphone Features Revolutionary Battery Life",
            "Entertainment: Popular TV Show Announces Final Season",
            "Science: Researchers Discover New Species in Amazon Rainforest",
            "Health: New Study Reveals Benefits of Mediterranean Diet",
            "Education: University Introduces New AI-Focused Curriculum",
            "Environment: Global Climate Summit Reaches Historic Agreement",
        ]

        def on_start(self):
            """Set up the API key for authentication"""
            self.headers = {"X-API-Key": API_KEY}  # Replace with your actual API key

        @task(2)
        def get_info(self):
            """Test the /info endpoint"""
            self.client.get("/info", headers=self.headers)

        @task(8)
        def predict_news(self):
            """Test the /predict endpoint with random news titles"""
            title = random.choice(self.sample_titles)
            self.client.post("/predict", json={"title": title}, headers=self.headers)
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: locust
  name: locust-cm0

---
apiVersion: v1
data:
  .env: |-
    # API Configuration
    API_KEY=abidali1234
    MODEL_NAME=news_classifier_logistic
    MODEL_VERSION=1
    CACHE_TTL=3600
    API_PORT=7860

    # MLflow Configuration
    MLFLOW_PORT=5000
    MLFLOW_TRACKING_URI=http://localhost:5000

    # Prefect Configuration
    PREFECT_PORT=4200
    PREFECT_SERVER_API_HOST=0.0.0.0
    PREFECT_SERVER_API_PORT=4200
    PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://prefect:prefect_password@prefect-db:5432/prefect

    # Grafana Configuration
    GRAFANA_PORT=3000
    GF_SECURITY_ADMIN_USER=admin
    GF_SECURITY_ADMIN_PASSWORD=admin
    GF_USERS_ALLOW_SIGN_UP=false

    # Prometheus Configuration
    PROMETHEUS_PORT=9090

    # Locust Configuration
    LOCUST_PORT=8089
    LOCUST_MODE=standalone
    LOCUST_USERS=100
    LOCUST_SPAWN_RATE=10

    # Pipeline Configuration
    RUN_PIPELINE=true

    # Kaggle
    KAGGLE_USERNAME=faizan
    KAGGLE_API_KEY=67552be506ca5d689239b4f8012ca1b6
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: locust
  name: locust-cm1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: mlflow
  name: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mlflow
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: mlflow
    spec:
      containers:
        - args:
            - sh
            - -c
            - |2
                mkdir -p /mlflow/artifacts &&
                chmod -R 777 /mlflow &&
                mlflow server --host=0.0.0.0 --port=5000 --backend-store-uri=sqlite:///mlflow/mlflow.db --default-artifact-root=/mlflow/artifacts --serve-artifacts
          env:
            - name: MLFLOW_TRACKING_URI
              value: http://mlflow:5000
          image: ghcr.io/mlflow/mlflow:latest
          livenessProbe:
            exec:
              command:
                - python
                - -c
                - import urllib.request; print(urllib.request.urlopen('http://localhost:5000/health').read().decode())
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 30
            timeoutSeconds: 10
          name: mlflow
          ports:
            - containerPort: 5000
              protocol: TCP
          volumeMounts:
            - mountPath: /mlflow
              name: mlflow-data
      restartPolicy: Always
      volumes:
        - name: mlflow-data
          persistentVolumeClaim:
            claimName: mlflow-data

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: prefect
  name: prefect
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prefect
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: prefect
    spec:
      containers:
        - name: prefect
          image: prefecthq/prefect:3-latest
          command: ["sh", "-c", "prefect server start --host 0.0.0.0 --port 4200"]
          env:
            - name: PREFECT_API_URL
              value: http://localhost:4200/api
            - name: PREFECT_HOME
              value: /opt/prefect
            - name: PREFECT_SERVER_API_HOST
              value: 0.0.0.0
            - name: PREFECT_SERVER_API_PORT
              value: "4200"
            - name: PREFECT_SERVER_API_URL
              value: http://prefect:4200/api
          livenessProbe:
            exec:
              command:
                - python
                - -c
                - import urllib.request; print(urllib.request.urlopen('http://localhost:4200/health').read().decode())
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 30
            timeoutSeconds: 10
          name: prefect
          ports:
            - containerPort: 4200
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/prefect
              name: prefect-data
      restartPolicy: Always
      volumes:
        - name: prefect-data
          persistentVolumeClaim:
            claimName: prefect-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: prefect-data
  name: prefect-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\abida\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -o k8s/all-in-one.yaml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: prometheus
    spec:
      containers:
        - args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
            - --storage.tsdb.retention.time=15d
            - --web.enable-lifecycle
          image: prom/prometheus:latest
          name: prometheus
          ports:
            - containerPort: 9090
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/prometheus/prometheus.yml
              name: prometheus-cm0
              readOnly: true
              subPath: prometheus.yml
            - mountPath: /prometheus
              name: prometheus-data
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: prometheus.yml
                path: prometheus.yml
            name: prometheus-cm0
          name: prometheus-cm0
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: prometheus-data
  name: prometheus-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    scrape_configs:
      - job_name: 'api'
        static_configs:
          - targets: ['api:7860']
        metrics_path: '/metrics'
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: prometheus
  name: prometheus-cm0

